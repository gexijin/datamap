% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{create_dr_plot}
\alias{create_dr_plot}
\title{Create Dimensionality Reduction Plot}
\usage{
create_dr_plot(
  coords_data,
  x_label,
  y_label,
  point_annot = NULL,
  fontsize = 12,
  show_labels = FALSE,
  point_labels = NULL
)
}
\arguments{
\item{coords_data}{A numeric matrix or data frame containing at least two columns for the x and y coordinates.}

\item{x_label}{A character string specifying the label for the x-axis.}

\item{y_label}{A character string specifying the label for the y-axis.}

\item{point_annot}{Optional data frame containing annotation data. The first column is used for assigning colors,
and if a second column is provided, its values are used for assigning point shapes.}

\item{fontsize}{A numeric value specifying the base font size used for labels, axes, and legends. Default is 12.}

\item{show_labels}{Logical flag indicating whether to display text labels next to points. Default is FALSE.}

\item{point_labels}{Optional character vector containing labels for each point. Must have at least as many elements as rows in coords_data when show_labels is TRUE.}
}
\value{
A recorded plot object that can be replayed using \code{replayPlot()}.
}
\description{
Generates a scatter plot for dimensionality reduction with support for annotations that alter
point colors and shapes, and optionally includes point labels.
}
\details{
The function sets up the plotting environment, adjusts plot limits based on whether labels are shown,
and manages legends for both color and shape annotations. If annotation data is provided, the first column
determines the color palette (using a rainbow palette) and the second column (if available) assigns point shapes.
}
\examples{
# Example with simulated data:
coords <- matrix(rnorm(200), ncol = 2)
annot <- data.frame(Group = sample(c("A", "B", "C"), 100, replace = TRUE),
                    Type = sample(c("X", "Y"), 100, replace = TRUE))
plot_obj <- create_dr_plot(coords, "X Axis", "Y Axis", point_annot = annot, show_labels = TRUE, 
                           point_labels = paste("P", 1:100, sep=""))
replayPlot(plot_obj)

}
